{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"VerificationMethod": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Verification method ID consists of two parts: <br />\n1) DID document ID verification method belongs to <br />\n2) Unique verification method identifier in a format \"#key-{number}\"",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#key-1"
					},
					"controller": {
						"type": "string",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					"type": {
						"type": "string",
						"enum": [
							"Ed25519VerificationKey2018"
						],
						"nullable": false
					},
					"publicKeyMultibase": {
						"type": "string",
						"example": "z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5"
					}
				},
				"required": [
					"id",
					"controller",
					"type",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Service": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Service ID consists of two parts: <br />\n1) DID document ID service belongs to <br />\n2) Unique service identifier in a format \"#service-{number}\"",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#service-1"
					},
					"type": {
						"type": "string",
						"enum": [
							"LinkedDomains",
							"DIDCommMessaging"
						]
					},
					"serviceEndpoint": {
						"type": "string",
						"example": "https://your.service/did-comm"
					}
				},
				"required": [
					"id",
					"type",
					"serviceEndpoint"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DidDocument": {
				"properties": {
					"@context": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"controller": {
						"type": "string"
					},
					"verificationMethod": {
						"items": {
							"$ref": "#/components/schemas/VerificationMethod"
						},
						"type": "array"
					},
					"authentication": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"assertionMethod": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"keyAgreement": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"capabilityInvocation": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"capabilityDelegation": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"service": {
						"items": {
							"$ref": "#/components/schemas/Service"
						},
						"type": "array"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"@context",
					"verificationMethod",
					"authentication",
					"assertionMethod",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidateErrorJSON": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IDidDocumentRegisterPayload": {
				"properties": {
					"publicKeyMultibase": {
						"type": "string",
						"example": "z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5"
					}
				},
				"required": [
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IDidOwnershipClaimPayload": {
				"properties": {
					"privateKeyMultibase": {
						"type": "string",
						"example": "z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5"
					}
				},
				"required": [
					"privateKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IDidOwnershipRegisterPayload": {
				"properties": {
					"privateKeyMultibase": {
						"type": "string",
						"example": "z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5"
					}
				},
				"required": [
					"privateKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServiceRegisterPayload": {
				"properties": {
					"service": {
						"$ref": "#/components/schemas/Service"
					}
				},
				"required": [
					"service"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServiceUpdateBody": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"LinkedDomains",
							"DIDCommMessaging"
						]
					},
					"serviceEndpoint": {
						"type": "string",
						"example": "https://your.service/did-comm"
					}
				},
				"required": [
					"type",
					"serviceEndpoint"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServiceUpdatePayload": {
				"properties": {
					"service": {
						"$ref": "#/components/schemas/IServiceUpdateBody"
					}
				},
				"required": [
					"service"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationMethodRegisterPayload": {
				"properties": {
					"verificationMethod": {
						"$ref": "#/components/schemas/VerificationMethod"
					}
				},
				"required": [
					"verificationMethod"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationMethodUpdateBody": {
				"properties": {
					"controller": {
						"type": "string",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					"type": {
						"type": "string",
						"enum": [
							"Ed25519VerificationKey2018"
						],
						"nullable": false
					},
					"publicKeyMultibase": {
						"type": "string",
						"example": "z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5"
					}
				},
				"required": [
					"controller",
					"type",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationMethodUpdatePayload": {
				"properties": {
					"verificationMethod": {
						"$ref": "#/components/schemas/IVerificationMethodUpdateBody"
					}
				},
				"required": [
					"verificationMethod"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RelationshipTypeType": {
				"type": "string",
				"enum": [
					"authentication",
					"assertionMethod",
					"keyAgreement",
					"capabilityDelegation",
					"capabilityInvocation"
				]
			},
			"IVerificationRelationship": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Verification relationship ID. References a key in verification methods list.",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#key-1"
					},
					"controller": {
						"type": "string",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					"type": {
						"type": "string",
						"enum": [
							"Ed25519VerificationKey2018"
						],
						"nullable": false
					},
					"relationshipType": {
						"$ref": "#/components/schemas/RelationshipTypeType"
					},
					"publicKeyMultibase": {
						"type": "string",
						"example": "z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5"
					}
				},
				"required": [
					"id",
					"controller",
					"type",
					"relationshipType",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationRelationshipRegisterPayload": {
				"properties": {
					"verificationRelationship": {
						"$ref": "#/components/schemas/IVerificationRelationship"
					}
				},
				"required": [
					"verificationRelationship"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationRelationshipUpdateBody": {
				"properties": {
					"controller": {
						"type": "string",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					"type": {
						"type": "string",
						"enum": [
							"Ed25519VerificationKey2018"
						],
						"nullable": false
					},
					"publicKeyMultibase": {
						"type": "string",
						"example": "z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5"
					}
				},
				"required": [
					"controller",
					"type",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationRelationshipUpdatePayload": {
				"properties": {
					"verificationRelationship": {
						"$ref": "#/components/schemas/IVerificationRelationshipUpdateBody"
					}
				},
				"required": [
					"verificationRelationship"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VcStatusListInfo": {
				"properties": {
					"id": {
						"type": "string",
						"example": "https://appnet.meecoo.me/vc/status/0.0.123/614"
					},
					"type": {
						"type": "string",
						"enum": [
							"RevocationList2021Status",
							"SuspensionList2021Status"
						]
					},
					"statusListIndex": {
						"type": "number",
						"format": "double",
						"example": 614
					},
					"statusListCredential": {
						"type": "string",
						"example": "https://appnet.meecoo.me/vc/status/0.0.123"
					}
				},
				"required": [
					"id",
					"type",
					"statusListIndex",
					"statusListCredential"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VcStatusListInfoResponse": {
				"properties": {
					"statusInfo": {
						"$ref": "#/components/schemas/VcStatusListInfo"
					}
				},
				"required": [
					"statusInfo"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterVcStatusPayload": {
				"properties": {
					"issuerDID": {
						"type": "string",
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				},
				"required": [
					"issuerDID"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Readonly_W3CCredential_": {
				"properties": {},
				"type": "object",
				"description": "Make all properties in T readonly"
			},
			"Proof": {
				"properties": {
					"type": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": {}
			},
			"Verifiable_W3CCredential_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Readonly_W3CCredential_"
					},
					{
						"properties": {
							"proof": {
								"$ref": "#/components/schemas/Proof"
							}
						},
						"required": [
							"proof"
						],
						"type": "object"
					}
				],
				"description": "Represents a readonly representation of a verifiable object, including the {@link Proof}\r\nproperty that can be used to verify it."
			},
			"status": {
				"type": "string",
				"enum": [
					"revoked",
					"suspended",
					"resumed",
					"active"
				]
			},
			"VcStatusChangePayload": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/status"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"SignedRequestHeader": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			},
			"DigestHeader": {
				"type": "apiKey",
				"name": "Digest",
				"in": "header"
			},
			"ExpiresHeader": {
				"type": "apiKey",
				"name": "Expires",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "identity-network",
		"version": "1.0.0",
		"description": "Hedera Appnet API",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Meeco",
			"url": "https://meeco.me",
			"email": "‍support@meeco.me"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/did": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Register a new DID document. User provides public key that is going to be added as a delegate key.\nThat allows user to modify created DID document later. <br /><br />\n<em>* Based on your use case you should consider securing this endpoint. Endpoint communicates to Hedera Consensus Services.</em>",
				"summary": "Register a new DID Document.",
				"tags": [
					"DID - Document"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IDidDocumentRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}": {
			"get": {
				"operationId": "Resolve",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Resolve DID Document <br /><br />\n<em>* Based on your use case you might consider securing this endpoint. Endpoint communicates to mirror nodes to resolve DID documents.</em>",
				"summary": "Resolve DID Document",
				"tags": [
					"DID - Document"
				],
				"security": [],
				"parameters": [
					{
						"description": "A DID Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				]
			},
			"delete": {
				"operationId": "Revoke",
				"responses": {
					"204": {
						"description": "No content"
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Permanently remove DID Document from Appnet registry.\nIn addition to that, new messages will be written to the DID topic stating that document has been removed.",
				"summary": "Remove DID Document from registry",
				"tags": [
					"DID - Document"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "DID Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				]
			}
		},
		"/did/{did}/claim": {
			"post": {
				"operationId": "Claim",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Claim DID Document ownership back from the AppNet. Changes DID root key to the one provided via `privateKeyMultibase` parameter.\nDID controller remains the same.",
				"summary": "Claim DID Document ownership back from the AppNet",
				"tags": [
					"DID - Ownership"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "A DID Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IDidOwnershipClaimPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Register an existing DID Document with AppNet. Gives away control of the document to the AppNet component.\nPrevious DID root (`privateKeyMultibase` parameter) key becomes a delegate key. <br /><br />\n<em>* Based on your use case you should consider securing this endpoint. Endpoint communicates to Hedera Consensus Services.</em>",
				"summary": "Register an existing DID Document with AppNet",
				"tags": [
					"DID - Ownership"
				],
				"security": [],
				"parameters": [
					{
						"description": "A DID Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IDidOwnershipRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/services": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Register a new service to the DID Document",
				"summary": "Register a new service to the DID Document",
				"tags": [
					"DID - Service"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				],
				"requestBody": {
					"description": "Register service payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IServiceRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/services/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Update service information on the DID Document",
				"summary": "Update service information on the DID Document",
				"tags": [
					"DID - Service"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					{
						"description": "Service ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#service-1"
					}
				],
				"requestBody": {
					"description": "Update service payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IServiceUpdatePayload"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Revoke",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Remove service information from the DID Document",
				"summary": "Remove service information from the DID Document",
				"tags": [
					"DID - Service"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					{
						"description": "Service ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#service-1"
					}
				]
			}
		},
		"/did/{did}/verification-methods": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Register a new verification method to the DID document",
				"summary": "Register a new verification method to the DID document",
				"tags": [
					"DID - Verification Method"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				],
				"requestBody": {
					"description": "Register verification method payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationMethodRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/verification-methods/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Update verification method on a DID document",
				"summary": "Update verification method on a DID document",
				"tags": [
					"DID - Verification Method"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					{
						"description": "Verification Method ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#key-1"
					}
				],
				"requestBody": {
					"description": "Update verification method payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationMethodUpdatePayload"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Revoke",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Remove verification method from the DID document",
				"summary": "Remove verification method from the DID document",
				"tags": [
					"DID - Verification Method"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					{
						"description": "Verification Method ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#key-1"
					}
				]
			}
		},
		"/did/{did}/verification-relationships": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Register a new verification relationship to the DID document",
				"summary": "Register a new verification relationship to the DID document",
				"tags": [
					"DID - Verification Relationship"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					}
				],
				"requestBody": {
					"description": "Register verification relationship payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationRelationshipRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/verification-relationships/{relationshipType}/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Update verification relationship on the DID document",
				"summary": "Update verification relationship on the DID document",
				"tags": [
					"DID - Verification Relationship"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					{
						"description": "String to specify which relationship type key belongs to",
						"in": "path",
						"name": "relationshipType",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/RelationshipTypeType"
						}
					},
					{
						"description": "Verification Method ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#key-1"
					}
				],
				"requestBody": {
					"description": "Update verification relationship payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationRelationshipUpdatePayload"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Revoke",
				"responses": {
					"200": {
						"description": "DidDocument",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Remove verification relationship from the DID document",
				"summary": "Remove verification relationship from the DID document",
				"tags": [
					"DID - Verification Relationship"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719"
					},
					{
						"description": "String to specify which relationship type key belongs to",
						"in": "path",
						"name": "relationshipType",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/RelationshipTypeType"
						}
					},
					{
						"description": "Verification Method ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "did:hedera:testnet:z6Mkfza16PqnyMyxPZd7dVhs6ySUettURTztjNJ8qBKwyHg5_0.0.30835719#key-1"
					}
				]
			}
		},
		"/vc/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Credential status list information",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VcStatusListInfoResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Register verifiable credential status",
				"summary": "Register verifiable credential status.",
				"tags": [
					"VC - Status List"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterVcStatusPayload"
							}
						}
					}
				}
			}
		},
		"/vc/status/{statusListFileId}": {
			"get": {
				"operationId": "Status",
				"responses": {
					"200": {
						"description": "Verifiable credential that encapsulates the status list",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Verifiable_W3CCredential_"
								},
								"examples": {
									"Example 1": {
										"value": {
											"@context": [
												"https://www.w3.org/2018/credentials/v1",
												"https://w3id.org/vc-status-list-2021/v1"
											],
											"type": [
												"VerifiableCredential",
												"StatusList2021Credential"
											],
											"additionalProps": {
												"jti": "urn:uuid:a98e123b-17dd-4d85-afbc-a67b2637f733"
											},
											"id": "https://localhost:8000/vc/status/0.0.33965935",
											"issuer": {
												"id": "did:hedera:testnet:z6MkgYkY291VKXD6JvToXHaF13qg1fY9rSsmC9hWTtxsYfoB_0.0.33965881"
											},
											"issuanceDate": "2022-03-17T14:47:32.000Z",
											"expirationDate": "2022-03-17T14:47:32.000Z",
											"credentialSubject": {
												"encodedList": "H4sIAAAAAAAAA-3BMQEAAADCoPVPbQsvoAAAAAAAAAAAAAAAAP4GcwM92tQwAAA",
												"type": "RevocationList2021",
												"id": "https://localhost:8000/vc/status/0.0.33965935#list"
											},
											"proof": {
												"type": "Ed25519Signature2018",
												"proofPurpose": "assertionMethod",
												"created": "2022-03-17T14:47:32.000Z",
												"verificationMethod": "did:hedera:testnet:z6MkgYkY291VKXD6JvToXHaF13qg1fY9rSsmC9hWTtxsYfoB_0.0.33965881#did-root-key",
												"jws": "4WV8waZlbHyEo8o-Pq7wkyz0l1u0HQT_cZp3tgWPTW2l3gbW1lo6-8OLyDNn28YdUPf6AcUyXXnbrB1J8d8HDQ"
											},
											"jti": "urn:uuid:a98e123b-17dd-4d85-afbc-a67b2637f733",
											"_jwt": "eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NDc1Mjg0NTIsImlkIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6ODAwMC92Yy9zdGF0dXMvMC4wLjMzOTY1OTM1IiwiaXNzIjoiZGlkOmhlZGVyYTp0ZXN0bmV0Ono2TWtnWWtZMjkxVktYRDZKdlRvWEhhRjEzcWcxZlk5clNzbUM5aFdUdHhzWWZvQl8wLjAuMzM5NjU4ODEiLCJqdGkiOiJ1cm46dXVpZDphOThlMTIzYi0xN2RkLTRkODUtYWZiYy1hNjdiMjYzN2Y3MzMiLCJuYmYiOjE2NDc1Mjg0NTIsInN1YiI6Imh0dHBzOi8vbG9jYWxob3N0OjgwMDAvdmMvc3RhdHVzLzAuMC4zMzk2NTkzNSNsaXN0IiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJodHRwczovL3czaWQub3JnL3ZjLXN0YXR1cy1saXN0LTIwMjEvdjEiXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiZW5jb2RlZExpc3QiOiJINHNJQUFBQUFBQUFBLTNCTVFFQUFBRENvUFZQYlFzdm9BQUFBQUFBQUFBQUFBQUFBUDRHY3dNOTJ0UXdBQUEiLCJ0eXBlIjoiUmV2b2NhdGlvbkxpc3QyMDIxIn0sImlkIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6ODAwMC92Yy9zdGF0dXMvMC4wLjMzOTY1OTM1IiwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIlN0YXR1c0xpc3QyMDIxQ3JlZGVudGlhbCJdfX0.4WV8waZlbHyEo8o-Pq7wkyz0l1u0HQT_cZp3tgWPTW2l3gbW1lo6-8OLyDNn28YdUPf6AcUyXXnbrB1J8d8HDQ"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Resolve verifiable credential that encapsulates the status list.",
				"summary": "Resolve verifiable credential status list.",
				"tags": [
					"VC - Status List"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "statusListFileId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/vc/status/{statusListFileId}/{statusListIndex}": {
			"put": {
				"operationId": "Revoke",
				"responses": {
					"204": {
						"description": "No content"
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "active, revoked, suspended or resumed verifiable credential status",
				"summary": "active, revoked, suspended or resumed verifiable credential status.",
				"tags": [
					"VC - Status List"
				],
				"security": [
					{
						"SignedRequestHeader": [],
						"DigestHeader": [],
						"ExpiresHeader": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "statusListFileId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "statusListIndex",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VcStatusChangePayload"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}