{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"VerificationMethod": {
				"properties": {
					"id": {
						"type": "string"
					},
					"controller": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"publicKeyMultibase": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"controller",
					"type",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Service": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"serviceEndpoint": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"type",
					"serviceEndpoint"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DidDocument": {
				"properties": {
					"@context": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"controller": {
						"type": "string"
					},
					"verificationMethod": {
						"items": {
							"$ref": "#/components/schemas/VerificationMethod"
						},
						"type": "array"
					},
					"authentication": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"assertionMethod": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"keyAgreement": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"capabilityInvocation": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"capabilityDelegation": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"service": {
						"items": {
							"$ref": "#/components/schemas/Service"
						},
						"type": "array"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"@context",
					"verificationMethod",
					"authentication",
					"assertionMethod",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IDidDocumentRegisterPayload": {
				"properties": {
					"publicKeyMultibase": {
						"type": "string",
						"enum": [
							"string"
						],
						"nullable": false
					}
				},
				"required": [
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServiceRegisterPayload": {
				"properties": {
					"service": {
						"$ref": "#/components/schemas/Service"
					}
				},
				"required": [
					"service"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServiceUpdateBody": {
				"properties": {
					"type": {
						"type": "string"
					},
					"serviceEndpoint": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"serviceEndpoint"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServiceUpdatePayload": {
				"properties": {
					"service": {
						"$ref": "#/components/schemas/IServiceUpdateBody"
					}
				},
				"required": [
					"service"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationMethodRegisterPayload": {
				"properties": {
					"verificationMethod": {
						"$ref": "#/components/schemas/VerificationMethod"
					}
				},
				"required": [
					"verificationMethod"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationMethodUpdateBody": {
				"properties": {
					"controller": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"publicKeyMultibase": {
						"type": "string"
					}
				},
				"required": [
					"controller",
					"type",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationMethodUpdatePayload": {
				"properties": {
					"verificationMethod": {
						"$ref": "#/components/schemas/IVerificationMethodUpdateBody"
					}
				},
				"required": [
					"verificationMethod"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationRelationship": {
				"properties": {
					"id": {
						"type": "string"
					},
					"controller": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"relationshipType": {
						"type": "string"
					},
					"publicKeyMultibase": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"controller",
					"type",
					"relationshipType",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationRelationshipRegisterPayload": {
				"properties": {
					"verificationRelationship": {
						"$ref": "#/components/schemas/IVerificationRelationship"
					}
				},
				"required": [
					"verificationRelationship"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationRelationshipUpdateBody": {
				"properties": {
					"controller": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"relationshipType": {
						"type": "string"
					},
					"publicKeyMultibase": {
						"type": "string"
					}
				},
				"required": [
					"controller",
					"type",
					"relationshipType",
					"publicKeyMultibase"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IVerificationRelationshipUpdatePayload": {
				"properties": {
					"verificationRelationship": {
						"$ref": "#/components/schemas/IVerificationRelationshipUpdateBody"
					}
				},
				"required": [
					"verificationRelationship"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "hedera-appnet",
		"version": "1.0.0",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/did": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Register a new DID document. User provides public key that is going to be added as a delegate key that allows user to modify created DID document later.",
				"summary": "Register a new DID Document.",
				"tags": [
					"Document"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IDidDocumentRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}": {
			"get": {
				"operationId": "Resolve",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Resolve DID Document",
				"summary": "Resolve DID Document",
				"tags": [
					"Document"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Permanently remove DID Document from Appnet registry. In addition to that, new messages will be written to the DID topic stating that document has been removed.",
				"summary": "Remove DID Document from registry",
				"tags": [
					"Document"
				],
				"security": [],
				"parameters": [
					{
						"description": "DID Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/did/{did}/services": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Register a new service to the DID Document",
				"summary": "Register a new service to the DID Document",
				"tags": [
					"Service"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Register service payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IServiceRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/services/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Update service information on the DID Document",
				"summary": "Update service information on the DID Document",
				"tags": [
					"Service"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Service ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Update service payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IServiceUpdatePayload"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Remove service information from the DID Document",
				"summary": "Remove service information from the DID Document",
				"tags": [
					"Service"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Service ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/did/{did}/verification-methods": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Register a new verification method to the DID document",
				"summary": "Register a new verification method to the DID document",
				"tags": [
					"Verification Method"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Register verification method payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationMethodRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/verification-methods/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Update verification method on a DID document",
				"summary": "Update verification method on a DID document",
				"tags": [
					"Verification Method"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Verification method ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Update verification method payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationMethodUpdatePayload"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Remove verification method from the DID document",
				"summary": "Remove verification method from the DID document",
				"tags": [
					"Verification Method"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Verification method ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/did/{did}/verification-relationships": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Register a new verification relationship to the DID document",
				"summary": "Register a new verification relationship to the DID document",
				"tags": [
					"Verification Relationship"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Register verification relationship payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationRelationshipRegisterPayload"
							}
						}
					}
				}
			}
		},
		"/did/{did}/verification-relationships/{id}": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Update verification relationship on the DID document",
				"summary": "Update verification relationship on the DID document",
				"tags": [
					"Verification Relationship"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Verification relationship ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Update verification relationship payload",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IVerificationRelationshipUpdatePayload"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DidDocument"
								}
							}
						}
					}
				},
				"description": "Remove verification relationship from the DID document",
				"summary": "Remove verification relationship from the DID document",
				"tags": [
					"Verification Relationship"
				],
				"security": [],
				"parameters": [
					{
						"description": "Identifier as defined in DID specification",
						"in": "path",
						"name": "did",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Verification relationship ID string",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}